module common {
    type T = integer;
}

module module1 {
    import common;

    var x: integer;

    define bar(x: T): T = x;

    function gar(x: T): T;

    procedure zar(x: T) returns (res: T) {
        res = x + 1;
    }
}

// Import all of module1
module main {
    import module1;

    procedure foo()
        modifies x;
        ensures x == old(x) + 1;
    {
        var z: T;
        z = gar(x);
        call (x) = zar(bar(x));
    }

    invariant x_always_positive: x > 0;

    init {
        x = 1;
    }

    next {
        x' = x + 1;
    }

    control {
        v = verify(foo);
        u = unroll(5);
        check;
        print_results;
        u.print_cex();
    }
}
