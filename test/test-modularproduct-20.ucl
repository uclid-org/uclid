module main
{
  procedure sum(arr : [integer]integer, n : integer)
    returns  (total : integer)
    requires (n > 0);
    ensures  ((n.1 == n.2) && 
               (forall (j : integer) :: 0 <= j < n.1 ==> 
                  (arr.1)[j] == (arr.2)[j])) ==> (total.1 == total.2);
  {
    var i : integer;

    // loop over the array.
    total = 0;
    i = 0;
    while (i < n) 
      invariant (0 <= i.1 <= n.1) && (0 <= i.2 <= n.2);
      invariant (n.1 == n.2) ==> (i.1 == i.2);
      invariant ((n.1 == n.2) && 
                  (forall (j : integer) :: 0 <= j < i.1 ==> 
                      (arr.1)[j] == (arr.2)[j])) ==> (total.1 == total.2);
    {
      total = total + arr[i];
      i = i + 1;
    }
  }

  control {
    v = verify(sum);
    check;
    print_results;
  }
}
