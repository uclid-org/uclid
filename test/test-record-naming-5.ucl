// varibale'.record
module main {
  type num = integer;
  type bit = boolean;
  type rec1 = record {pn : num, b : num, c : bit };

  var p, q1, q2 : rec1;

  procedure foo(p : rec1) returns (pn : rec1) {
    pn.pn = p.pn + 1;
    pn.b = p.pn + p.b;
    pn.c = !(p.c);
  }

  procedure bar(p : rec1) returns (pn : rec1) {
    pn.b = p.pn + p.b + 1;
    pn.pn = pn.b - p.b;
    pn.c = !p.c;
  }

  init {
    p.pn = 0;
    p.b = 1;
    p.c = false;
  }

  next {
    call (q1') = foo(p);
    call (q2') = foo(p);
    p' = q1;

    assert (q1'.pn == q2'.pn);
    assert (q1'.b == q2'.b);
    assert (q1'.c == q2'.c);
  }


  control {
   unroll (3);
   check;
   print_results;
  }
}