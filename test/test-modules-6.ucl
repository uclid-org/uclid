module common
{
  const k0 : integer = 0;
  const k1 : integer = 1;
}

module incr
{
  input x  : integer;
  output y : integer;
  var c    : integer;

  init {
    c = common.k0;
  }

  next {
    c' = c + common.k1;
    y' = x + c';
  }
}

module main
{
  var a, b, q : integer;
  var inited  : boolean;
  var blah    : integer;

  instance incr1 : incr(x : (a'), y: (b));

  init {
    a = common.k0;
    b = common.k0;
    inited = false;
  }

  next {
    inited' = true;
    q' = b' + common.k1;
    a' = a  + common.k1;

    blah' = incr1.x;

    next (incr1);
    // assert (b < b');
  }

  invariant b_prop: inited ==> (b >= 2 && b > a && q > b);

  control {
    // print_module;
    v = unroll(5);
    check;
    print_results;
    // v.print_cex(a, b, q, incr1.x, incr1.y, incr1.c);
  }
}
