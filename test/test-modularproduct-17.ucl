/* Testing Procedure Calls
Procedure A calls Procedure B -- B doesn't have translation

Type Test - Tuples

*/


module main 
{


    procedure checkEqualityInt(num1: integer, num2: integer) returns (res: integer)
    ensures ( (res == 0) <==> (num1 == num2));
    ensures ( (res == 1) <==> (num1 > num2));
    ensures ( (res == -1) <==> (num1 < num2));
    {
        res = 0;
        if(num1 > num2)
        {
            res = 1;
        }
        if(num1 <num2)
        {
            res = -1;
        }
    }

    procedure checkEqualityBool(num1: boolean, num2: boolean) returns (res: boolean)
    ensures ( (res == true) <==> (num1 == num2));
    ensures ( (res == false) <==> (num1 != num2));
    {
        res = false;
        if(num1 == num2) {
            res = true;
        }
    }



    procedure checkEqualityTuple(tupOne: {integer, boolean}, tupTwo: {integer, boolean}) returns (res: boolean)
    ensures ( (res==true) <==> (tupOne == tupTwo));
    ensures ( (res == false) <==> (tupOne != tupTwo));
    ensures ( (tupOne.1 == tupOne.2 && tupTwo.1 == tupTwo.2) ==> (res.1 == res.2));
    {
        var first: integer;
        var second: boolean;
        res = false;
        call (first) = checkEqualityInt(tupOne._1, tupTwo._1);
        call (second) = checkEqualityBool(tupOne._2, tupTwo._2);
        if(first==0 && second) {
            res = true;
        }
    }



    control
    {
        v = verify(checkEqualityTuple);
        check;
        v.print_cex(tupOne, tupTwo, res);
        print_results;
    }
}