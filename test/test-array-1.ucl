module main
{
  type num_t = integer;
  var numbers : [boolean, num_t]integer;

  var sum, index : integer;
  
  procedure next_state()
    modifies numbers, sum, index;
  {
    sum = sum + index;
    numbers[true, index] = index;
    numbers[false, index] = -index;
    
    index = index + 1;
  }
  
  init {
    for i in range(0, 9) {
      numbers[true, i] = 0;
      numbers[false, i] = 0;
    }
    sum = 0;
    index = 0;
  }
  
  next {
    call next_state();

    assert ((numbers[true, 0] + numbers[true, 1] + numbers[true, 2] + numbers[true, 3] + 
    		 numbers[true, 4] + numbers[true, 5] + numbers[true, 6] + numbers[true, 7]) == sum);

    assert ((numbers[false, 0] + numbers[false, 1] + numbers[false, 2] + numbers[false, 3] + 
    		 numbers[false, 4] + numbers[false, 5] + numbers[false, 6] + numbers[false, 7]) == -sum);
  }
  
  control {
    print_module;
    unroll (5);
    check;
    print_results;
  }
}
