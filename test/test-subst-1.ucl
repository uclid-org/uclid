module main
{
    var x : integer;

    init {
        x = 0;
    }

    procedure next_z ()
        returns (zp : integer)
    {
        var y : integer;
        var z : integer;
        // this 'z' is always positive.
        z = if (y > 0) then y else (-y);

        {
            // while this one is not.
            var z : integer;
            zp = x + z;
        }
    }

    next {
        call (x') = next_z();
    }

    invariant x_positive : x >= 0;
    
    control {
        v = unroll (2);
        check;
        print_results;
    }
}
