/* Testing Procedure Calls
Procedure A calls Procedure B -- B doesn't have translation
*/


module main 
{
    type tup = record {
        p: integer,
        q: integer
    };

    /* No Hyperproperty, hence shouldn't be translated */
    procedure isGreaterThan(p: integer, q:integer) returns (res: boolean)
    ensures ( (res == true) ==> ( p > q));
    ensures ( (res == false) ==> ( p <= q));
    {
        res = true;
        if( p <= q) 
        {
            res = false;
        }
    }

    procedure isGreaterThanUtil(tupOne: tup, tupTwo: tup) returns (res: boolean)
    ensures ( (res == true) ==> ( tupOne.p > tupTwo.p));
    ensures ( (res == false) ==> ( tupOne.p <= tupTwo.p));
    ensures ( (tupOne.1 == tupOne.2 && tupTwo.1 == tupTwo.2)  ==> (res.1 == res.2));
    {
        /* Call Statement shouldn't change isGreaterThan()'s signature */
        call (res) = isGreaterThan(tupOne.p, tupTwo.p);
    }



    control
    {
        v = verify(isGreaterThanUtil);
        check;
        v.print_cex(tupOne, tupTwo, res);
        print_results;
    }
}