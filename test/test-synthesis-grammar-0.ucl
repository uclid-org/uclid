/* Toy example #0 to test grammar with integers.
   Run with `run -f -y "cvc4 --lang sygus2" test/test-synthesis-grammar-0.ucl`
*/
module main
{
  input a, b : integer;
  var sum : integer;
  var prev_sum : integer;
  
  grammar max_grammar (x : integer, y : integer) : integer = {
    (start : integer) ::= 0 | 1 | x | y | 
    					 (start + start) | (start - start) |
    					 (if (cond) then start else start);
    (cond : boolean) ::= true | false | (!cond) | (start <= start);
  }

  synthesis function max2 (x : integer, y : integer) : integer
    grammar max_grammar(x, y);
    //ensures (max2(x, y) >= x && max2(x, y) >= y);
  

  procedure max2_impl(x: integer, y: integer) returns (res: integer)
    ensures (res >= x && res >= y);
  {
    res = max2(x ,y);
  }

  control {
    vf = verify(max2_impl);
    check;
    print_results;
  }
}
