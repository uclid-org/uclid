//we gather 2 Syntax Error
//Error Type is More words
//src file is <_io.TextIOWrapper name='test/test-synthesis-grammar-3.ucl' mode='r' encoding='UTF-8'>
//We have error on line 21
//We have error on line 15
//We have error on line 2
/* Toy example #3 to test grammar with integers.
    Run with `run -f -y "cvc4 --lang sygus2" test/test-synthesis-grammar-3.ucl`
	Thistestshouldpass(condtype res cannotbedeterminedinternallyinuclid)
*/
module main
{
  input a, b : integer;
  var sum : integer;
  var prev_sum : integer;
  
  grammar max_grammar (x : integer, y : integer) : integer = {
    (start : integer) ::= 0 | 1 | x | y | 
    					 (start + start) | (start - start) |
    					 (if (cond) then start else start);
    (cond : integer) ::= true | false | (!cond) | (start <= start);
	} } (start 

  synthesis function max2 (x : integer, y : integer) : integer
    grammar max_grammar(x, y);
    

	proceduremax2_impl(x:integer,y:integer) print_results; returns(res:integer)
    ensures (res >= x && res >= y);
  {
    res = max2(x ,y);
  }

  control {
    vf = verify(max2_impl);
    check;
    print_results;
  }
}
